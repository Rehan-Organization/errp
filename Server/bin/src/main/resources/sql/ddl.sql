CREATE TABLE ROLE (
  ROLE_ID INT NOT NULL,
  ROLE_NAME VARCHAR(45) NOT NULL,
  PRIMARY KEY (ROLE_ID)
);

CREATE TABLE ERRP_USER (
	EMPLOYEE_ID INT PRIMARY KEY NOT NULL,
	USERNAME VARCHAR(100) NOT NULL,
	EMPLOYEE_NAME VARCHAR(200) NOT NULL,
	SUPERVISOR_ID INT,
	PASSWORD VARCHAR(100) NOT NULL,
	ENABLED BOOLEAN NOT NULL,
	CONSTRAINT FK_EMP_SUP FOREIGN KEY (SUPERVISOR_ID) REFERENCES ERRP_USER(EMPLOYEE_ID)
);
 
CREATE TABLE USER_ROLE (
  EMPLOYEE_ID INT NOT NULL,
  ROLE_ID INT NOT NULL,
  KEY USER_FK_IDX (EMPLOYEE_ID),
  KEY ROLE_FK_IDX (ROLE_ID),
  CONSTRAINT ROLE_FK FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ROLE_ID),
  CONSTRAINT USER_FK FOREIGN KEY (EMPLOYEE_ID) REFERENCES ERRP_USER(EMPLOYEE_ID)
);

CREATE TABLE ACHIEVEMENT(
	ACHIEVEMENT_ID INT PRIMARY KEY AUTO_INCREMENT,
    EMPLOYEE_ID INT,
    TITLE VARCHAR(500) NOT NULL,
    ACHIEVEMENT_DESC VARCHAR(2000),
    CREATED_DATE DATETIME,
    UPDATED_DATE DATETIME,
    CREATED_BY INT,
    UPDATED_BY INT,
    ACHIEVEMENT_STATUS INT,
	CONSTRAINT FK_ACHIEVEMENT_EMPID FOREIGN KEY(EMPLOYEE_ID) REFERENCES ERRP_USER(EMPLOYEE_ID),
    CONSTRAINT FK_ACHIEVEMENT_CREATED_BY FOREIGN KEY(CREATED_BY) REFERENCES ERRP_USER(EMPLOYEE_ID),
    CONSTRAINT FK_ACHIEVEMENT_UPDATED_BY FOREIGN KEY(UPDATED_BY) REFERENCES ERRP_USER(EMPLOYEE_ID)
);

CREATE TABLE NOTIFICATION(
	NOTIFICATION_ID INT PRIMARY KEY AUTO_INCREMENT,
    RECEIVER_ID INT,
    TITLE VARCHAR(500) NOT NULL,
    NOTIFICATION_DESC VARCHAR(2000),
    CREATED_DATE DATETIME,
    NOTIFICATION_STATUS INT,
    EVENT_TYPE INT,
    CONSTRAINT FK_NOTIFICATIONS_RECEIVER_ID FOREIGN KEY(RECEIVER_ID) REFERENCES ERRP_USER(EMPLOYEE_ID)
);

CREATE TABLE FEEDBACK(
	FEEDBACK_ID INT PRIMARY KEY AUTO_INCREMENT,
    SENDER_ID INT,
    RECEIVER_ID INT,
    TITLE VARCHAR(500),
    FEEDBACK_DESC VARCHAR(2000),
    CREATED_DATE DATETIME,
    UPDATED_DATE DATETIME,
    CONSTRAINT FK_FEEDBACKS_SENDER_ID FOREIGN KEY(SENDER_ID) REFERENCES ERRP_USER(EMPLOYEE_ID),
    CONSTRAINT FK_FEEDBACKS_RECEIVER_ID FOREIGN KEY(RECEIVER_ID) REFERENCES ERRP_USER(EMPLOYEE_ID)
);

CREATE TABLE AWARD_TYPE (
AWARD_ID INT PRIMARY KEY AUTO_INCREMENT,
AWARD_NAME VARCHAR(500) NOT NULL,
AWARD_DESC VARCHAR(2000) NOT NULL,
CREATED_DATE DATETIME NOT NULL,
UPDATED_DATE DATETIME NOT NULL,
AWARD_STATUS INT NOT NULL default 1,
AWARD_POINTS INT NOT NULL,
CREATED_BY INT NOT NUll,
UPDATED_BY INT NOT NULL,
CONSTRAINT FK_AWARD_TYPE_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES ERRP_USER(EMPLOYEE_ID),
CONSTRAINT FK_AWARD_TYPE_UPDATED_BY FOREIGN KEY (UPDATED_BY) REFERENCES ERRP_USER(EMPLOYEE_ID) 
);

CREATE TABLE AWARD_REQUEST(
	REQUEST_ID INT PRIMARY KEY AUTO_INCREMENT,
    AWARD_ID INT,
    AWARDEE_ID INT,
    AWARD_RAISED_BY_ID INT,
    AWARD_REQUEST_STATUS INT,
    CREATED_DATE DATETIME,
    UPDATED_DATE DATETIME,
    SUBMITTED_TO_ID INT,
    SUPERVISOR_COMMENTS VARCHAR(2000),
    REMARKS VARCHAR(2000),
    CONSTRAINT FK_AWARD_REQUESTS_AWARD_ID FOREIGN KEY(AWARD_ID) REFERENCES AWARD_TYPE(AWARD_ID),
    CONSTRAINT FK_AWARD_REQUESTS_AWARDEE FOREIGN KEY (AWARDEE_ID) REFERENCES ERRP_USER(EMPLOYEE_ID),
    CONSTRAINT FK_AWARD_REQUESTS_AWARD_RAISED_BY FOREIGN KEY (AWARD_RAISED_BY_ID) REFERENCES ERRP_USER(EMPLOYEE_ID),
    CONSTRAINT FK_AWARD_REQUESTS_SUBMITTED_TO FOREIGN KEY(SUBMITTED_TO_ID) REFERENCES ERRP_USER(EMPLOYEE_ID)
);

CREATE TABLE EMPLOYEE_AWARD(
	EMPLOYEE_AWARD_ID INT PRIMARY KEY AUTO_INCREMENT,
    AWARD_ID INT,
    ACHIEVEMENT_ID INT,
    APPROVED_DATE DATETIME,
    REQUEST_ID INT,
	AWARDEE_ID INT,
    AWARD_RAISED_BY_ID INT,
    SUPERVISOR_COMMENTS VARCHAR(2000),
    REMARKS VARCHAR(2000),
    APPROVED_BY_ID INT,
    CONSTRAINT FK_EMPLOYEE_AWARDS_AWARD_ID FOREIGN KEY(AWARD_ID) REFERENCES AWARD_TYPE(AWARD_ID),
    CONSTRAINT FK_EMPLOYEE_AWARDS_AWARDEE FOREIGN KEY(AWARDEE_ID) REFERENCES ERRP_USER(EMPLOYEE_ID),
    CONSTRAINT FK_EMPLOYEE_AWARDS_AWARD_RAISED_BY FOREIGN KEY(AWARD_RAISED_BY_ID) REFERENCES ERRP_USER(EMPLOYEE_ID),
    CONSTRAINT FK_EMPLOYEE_AWARDS_APPROVED_BY FOREIGN KEY(APPROVED_BY_ID) REFERENCES ERRP_USER(EMPLOYEE_ID),
	CONSTRAINT FK_EMPLOYEE_AWARDS_ACHIEVEMENT_ID FOREIGN KEY(ACHIEVEMENT_ID) REFERENCES ACHIEVEMENT(ACHIEVEMENT_ID),
    CONSTRAINT FK_EMPLOYEE_AWARDS_REQUEST_ID FOREIGN KEY(REQUEST_ID) REFERENCES AWARD_REQUEST(REQUEST_ID)
);